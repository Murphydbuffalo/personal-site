// Color Scheme generated by http://colorschemedesigner.com/csd-3.5/
const backgroundColors = [
  '#FFD773',
  '#FF8373',
  '#707ED7',
  '#64DF85',
];

function distanceToTop(e) {
  const { top, bottom } = e.getBoundingClientRect();
  return (top + bottom) / 2;
}

function closestToTop(elements) {
  let minimumNonNegativeDistanceToTop = 9999;
  let index = 0;

  const length = elements.length;

  // Can't use `.forEach` on a `Nodelist` in Firefox
  for (let i = 0; i < length; i++) {
    let distance = distanceToTop(elements[i]);

    if (distance > 0 && distance < minimumNonNegativeDistanceToTop) {
      minimumNonNegativeDistanceToTop = distance;
      index = i;
    }
  }

  return elements[index];
}

function randomIndex(array) {
  return Math.floor(Math.random() * array.length);
}

function pickNewColor(prevColor) {
  const newColorIndex = randomIndex(backgroundColors);

  if (backgroundColors[newColorIndex] !== prevColor) {
    return backgroundColors[newColorIndex];
  }

  return backgroundColors[newColorIndex + 1] || backgroundColors[newColorIndex - 1];
}

let pause = false;
let previousColor = null;

function animateBackgroundDivColor() {
  if (pause) {
    return;
  }

  pause = true;
  const backgroundDivs = document.querySelectorAll('.full-width-background');
  setTimeout(() => { pause = false }, 1000);

  const divInViewport = closestToTop(backgroundDivs);
  const length = backgroundDivs.length;

  // Can't use `.forEach` on a `Nodelist` in Firefox
  for (let i = 0; i < length; i++) {
    backgroundDivs[i].style.backgroundColor = '#FFFFFF';
  }

  const newColor = pickNewColor(previousColor);
  divInViewport.style.backgroundColor = newColor;
  previousColor = newColor;
}

function handleArrowKeyPress(fn) {
  const ARROW_KEY_CODES = [38, 40];

  return function(e) {
    if (ARROW_KEY_CODES.includes(e.which)) {
      fn();
    }
  }
}

function backgroundColorAnimation() {
  window.addEventListener('DOMContentLoaded', function() {
    setTimeout(animateBackgroundDivColor, 500);
  });
  window.addEventListener('mousewheel', animateBackgroundDivColor);
  window.addEventListener('scroll', animateBackgroundDivColor);
  window.addEventListener('touchmove', animateBackgroundDivColor);
  window.addEventListener('keydown', handleArrowKeyPress(animateBackgroundDivColor));
}

backgroundColorAnimation();
